<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>jenkins on 云端的blog</title><link>https://clouda3.github.io/tags/jenkins/</link><description>Recent content in jenkins on 云端的blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 13 Oct 2018 10:40:37 +0800</lastBuildDate><atom:link href="https://clouda3.github.io/tags/jenkins/index.xml" rel="self" type="application/rss+xml"/><item><title>如何配置jenkins新节点</title><link>https://clouda3.github.io/posts/jenkins_create_new_node/</link><pubDate>Sat, 13 Oct 2018 10:40:37 +0800</pubDate><guid>https://clouda3.github.io/posts/jenkins_create_new_node/</guid><description>jenkins 节点 简介 在企业里面使用Jenkins自动部署时，大部分企业更新发布几个软件版本,但是对于一些公司有非常多的业务线或者产品来说，Jenkins就需要同时处理很多的任务，这时候就需要借助Jenkins多个node或者我们所说的Jenkins分布式SLAVE节点，来分开处理多个产品或者业务线的部署，目的就是master节点用来分配任务，slave节点来具体执行部署任务 配置 slave节点 jenkins -&amp;gt;manage jenins -&amp;gt; manage node and cloud -&amp;gt;new node node name:test ,选择permanent node 填好number of executors:1 ,remote root,launch method:launch agent via ssh,Host,Credentials, Host Key Verification Strategy,known hosts file verification strategy ,availability:keep agent online as much as possible 在slave上安装各种需要软件 一定要安装相关的plugin和global tool configuration里面配置相关的工具软件 e 创建一个pipeline测试一下
pipeline { agent any stages { stage(&#39;Example&#39;) { steps { echo &#39;Hello World&#39; } } } post { always { echo &#39;I will .</description></item><item><title>jenkins简介</title><link>https://clouda3.github.io/posts/jenkins-devops-tools/</link><pubDate>Wed, 06 May 2015 11:40:00 +0800</pubDate><guid>https://clouda3.github.io/posts/jenkins-devops-tools/</guid><description> 什么是CI和CD CI(Continuous integration，中文意思是持续集成)/ CD(Continuous Delivery， 中文意思持续交付) CI/CD 是一种通过在应用开发阶段引入自动化来频繁向客户交付应用的方法。 CI/CD 的核心概念是持续集成、持续交付和持续部署。它是作为一个面向开发和运营团队的解决方案，主要针对在集成新代码时所引发的问题（也称为：“集成地狱”）。 CI/CD 可让持续自动化和持续监控贯穿于应用的整个生命周期（从集成和测试阶段，到交付和部署）。 jenkins简介 Jenkins是一个开源的、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的），主要用于持续、自动的构建/测试软件项目、监控外部任务的运行（这个比较抽象，暂且写上，不做解释）。Jenkins用Java语言编写，可在Tomcat等流行的servlet容器中运行，也可独立运行。通常与版本管理工具(SCM)、构建工具结合使用。可集成使用版本控制工具有SVN、GIT，以及构建工具有Maven、Ant、Gradle。 特点 易于安装-只要把jenkins.war部署到servlet容器，不需要数据库支持 易于配置-所有配置都是通过其提供的web界面实现； 有大量的插件可以配置使用,比如email通知结果,git,maven 附带了很多其他的功能比如用户密码的加密 可以支持备份,迁移,升级 还可以通过完全编程的方式Jenkinsfile,devops来实现纯代码的方式完全CI/CD 可以支持分布式的多个slave agent 可以保存每次build日志方便查阅 CI/CD 优势 1. 持续集成中的任何一个环节都是自动完成的，无需太多的人工干预，有利于减少重复过程以节省时间、费用和工作量 2. 持续集成保障了每个时间点上团队成员提交的代码是能成功集成的。换言之，任何时间点都能第一时间发现软件的集成问题，使任意时间发布可部署的软件成为了可能 3. CI/CD 具有高度的自动化 就是减少人工操作的事务，可以通过预先准备的脚本一次性运行，是我们内部或者外部用户，得到用户对于新版本的快速反馈，并且可以迅速处理任何明显的缺陷. 放几张图</description></item></channel></rss>