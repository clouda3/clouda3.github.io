<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ansible on 云端的blog</title><link>https://clouda3.github.io/tags/ansible/</link><description>Recent content in ansible on 云端的blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 29 May 2020 12:40:37 +0800</lastBuildDate><atom:link href="https://clouda3.github.io/tags/ansible/index.xml" rel="self" type="application/rss+xml"/><item><title>使用terraform创建阿里ecs用ansible完成主机配置</title><link>https://clouda3.github.io/posts/alicloud-terraform-create-ecs-ansible-provision/</link><pubDate>Fri, 29 May 2020 12:40:37 +0800</pubDate><guid>https://clouda3.github.io/posts/alicloud-terraform-create-ecs-ansible-provision/</guid><description>使用terraform创建ecs用ansible完成ecs的provision 本文目标就是是用terraform创建ecs包括security group,disk,vpc,vswtich,然后用ansible来初始化和配置创建好的ecs 本文只是创建了一个单机ecs，后续的文章会有load balance出现 terrorm 创建ecs 什么是terraform terraform是云工具，也就是针对云平台的 terraform是在云平台上管理资源的，就是一个云资源编排工具 terraform目标是&amp;rdquo;Write, Plan, and create Infrastructure as Code&amp;rdquo;, 基础架构即代码。具体的说就是可以用代码来管理维护 IT 资源，把之前需要手动操作的一部分任务通过程序来自动化的完成，这样的做的结果非常明显：高效、不易出错。 Terraform 核心功能
基础架构即代码(Infrastructure as Code) 执行计划(Execution Plans) 资源图(Resource Graph) 自动化变更(Change Automation) terraform安装
下载https://www.terraform.io/downloads.html 设置环境变量（省略） 创建terraform 配置文件
main.tf
provider &amp;quot;alicloud&amp;quot; { access_key = &amp;quot;xxx&amp;quot; secret_key = &amp;quot;xxx&amp;quot; region = &amp;quot;ap-southeast-1&amp;quot; #version = &amp;quot;~&amp;gt; 1.5.0&amp;quot; } data &amp;quot;alicloud_instance_types&amp;quot; &amp;quot;instance_type&amp;quot; { instance_type_family = &amp;quot;ecs.</description></item><item><title>使用ansible在多台客户机安装docker</title><link>https://clouda3.github.io/posts/ansible-deploy-docker-container/</link><pubDate>Fri, 22 May 2020 12:40:37 +0800</pubDate><guid>https://clouda3.github.io/posts/ansible-deploy-docker-container/</guid><description>Install ansible on server Ansible是一个开源配置管理工具，可以使用它来自动化任务，部署应用程序实现IT基础架构。Ansible可以用来自动化日常任务，比如，服务器的初始化配置、安全基线配置、更新和打补丁系统，安装软件包等 Ansible包括控制节点（Control node）也叫主机，受控节点（Managed nodes）也叫客户机,只在控制节点安装就好了 ansible 优点 只需要在主机上安装ansible软件，客户机不需要安装 通讯协议SSH协议和SFTP 可并行执行程序，默认情况下，forks值为5，可以按需，在配置文件中增大该值 ansible(centos)安装和配置 yum install ansible
为了使Ansible与客户端通信，需要使用用户帐户配置管理机和客户机。为了方便快捷安全，一般会配置证书方式连接客户机
ssh-keygen ssh-copy-id ansible@node ip 使用ad-hoc 在客户执行命令，相当于命令行 /etc/ansible/hosts,最好谨慎使用hosts配置，安全问题需要解决
[docker] 192.168.25.173 ansible_ssh_port=22 ansible_ssh_user=root ansible_ssh_pass=&amp;quot;xxx&amp;quot; 执行以下ping,命令里面的docker对应的上面文件的docker
ansible docker -m ping 使用ad-hoc命令管理软件包,安装
ansible docker -m yum -a &amp;quot;name=docker state=present&amp;quot; -b 使用ad-hoc命令管理软件包,设置默认启动
ansible docker -b -m service -a &amp;quot;name=docker enabled=yes&amp;quot; 使用ad-hoc命令管理软件包,启动
ansible docker -b -m service -a &amp;quot;name=httpd state=started&amp;quot; 使用ansible-playbook 部署docker test-ansile.</description></item><item><title>Ansible简介</title><link>https://clouda3.github.io/posts/ansible-devops-tools/</link><pubDate>Mon, 06 Mar 2017 11:40:00 +0800</pubDate><guid>https://clouda3.github.io/posts/ansible-devops-tools/</guid><description>Ansible 简介 ansible是基于Python开发，集合了众多运维工具（puppet、chef）的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能。最大的特点就是ansible不需要在远程主机上安装client/agents，因为它们是基于ssh来和远程主机通讯的。ansible目前已经已经被红帽官方收购，是自动化运维工具中大家认可度最高的，并且上手容易，学习简单。是每位运维工程师必须掌握的技能之一。 ## 特点 ##
部署简单，只需在主控端部署Ansible环境，被控端无需做任何操作； 默认使用SSH协议对设备进行管理； 有大量常规运维操作模块，可实现日常绝大部分操作； 配置简单、功能强大、扩展性强； 支持API及自定义模块，可通过Python轻松扩展； 通过Playbooks来定制强大的配置、状态管理； 轻量级，无需在客户端安装agent，更新时，只需在操作机上进行一次更新即可； 提供一个功能强大、操作性强的Web管理界面和REST API接口——AWX平台。 任务执行方式 ad-hoc模式(点对点模式)
使用单个模块，支持批量执行单条命令。ad-hoc 命令是一种可以快速输入的命令，而且不需要保存起来的命令。就相当于bash中的一句话shell。
playbook模式
是Ansible主要管理方式，也是Ansible功能强大的关键所在。playbook通过多个task集合完成一类功能.比如我们拷贝一个文件到主机，然后授予权限，然后启动程序这几个步骤结合在一起
Aansbile 文件和命令 ansible.cfg
inventory = /etc/ansible/hosts #这个参数表示资源清单inventory文件的位置 library = /usr/share/ansible #指向存放Ansible模块的目录，支持多个目录方式，只要用冒号（：）隔开就可以 forks = 5 #并发连接数，默认为5 sudo_user = root #设置默认执行命令的用户 remote_port = 22 #指定连接被管节点的管理端口，默认为22端口，建议修改，能够更加安全 host_key_checking = False #设置是否检查SSH主机的密钥，值为True/False。关闭后第一次连接不会提示配置实例 timeout = 60 #设置SSH连接的超时时间，单位为秒 log_path = /var/log/ansible.log #指定一个存储ansible日志的文件（默认不记录日志） inventory 文件
不分组</description></item></channel></rss>